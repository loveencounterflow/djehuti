{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n#===========================================================================================================\nrpr                       = ( require 'webguy' ).trm.rpr\n\n#===========================================================================================================\nisa =\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  null:                   ( x ) -> x is null\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  IT_listener:            ( x ) -> ( @function x ) or ( @asyncfunction x )\n  IT_note_$key:           ( x ) -> ( @text x ) or ( @symbol x )\n  nullary:                ( x ) -> x? and ( x.length is 0 )\n  unary:                  ( x ) -> x? and ( x.length is 1 )\n  binary:                 ( x ) -> x? and ( x.length is 2 )\n  unary_or_binary:        ( x ) -> x? and ( ( x.length is 1 ) or ( x.length is 2 ) )\n  binary_or_trinary:      ( x ) -> x? and ( ( x.length is 2 ) or ( x.length is 3 ) )\n  $freeze:                ( x ) -> isa.boolean x\n\n\n#===========================================================================================================\n{ isa_optional\n  validate\n  validate_optional } = do =>\n  isa_optional      = {}\n  validate          = {}\n  validate_optional = {}\n  #.........................................................................................................\n  for type, test of isa\n    do ( type, test ) =>\n      isa_optional[       type ] = ( x ) => if x? then ( test x )             else true\n      validate_optional[  type ] = ( x ) => if x? then ( validate[ type ] x ) else x\n      validate[           type ] = ( x ) =>\n        return x if test.call isa, x\n        ### TAINT `typeof` will give some strange results ###\n        throw new Error \"expected a #{type}, got a #{typeof x}\"\n  #.........................................................................................................\n  return { isa_optional, validate, validate_optional, }\n\nmodule.exports = { isa, isa_optional, validate, validate_optional, }\n"
  ]
}